{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","itemsOnPage","setItemsOnPage","hiddenImages","length","maxItemsOnPage","containerWidth","className","style","width","map","image","transform","transition","src","alt","type","onClick","Math","min","disabled","max","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","isChecked","setIsChecked","htmlFor","onChange","event","target","value","id","checked","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cc6268a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [itemsOnPage, setItemsOnPage] = useState(0);\n\n  const hiddenImages = (images.length - frameSize) * itemWidth;\n\n  const getPrevImage = () => {\n    setItemsOnPage(Math.min(itemsOnPage + itemWidth * step, 0));\n\n    if (itemsOnPage === 0) {\n      setItemsOnPage(-hiddenImages);\n    }\n  };\n\n  const getNextImage = () => {\n    setItemsOnPage(Math.max(itemsOnPage - itemWidth * step, -hiddenImages));\n\n    if (itemsOnPage === -hiddenImages && infinite) {\n      setItemsOnPage(0);\n    }\n  };\n\n  const maxItemsOnPage = (images.length - frameSize) * itemWidth;\n\n  const containerWidth = frameSize * itemWidth;\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${containerWidth}px` }}\n      >\n        {images.map(image => (\n          <li\n            className=\"Carousel__element\"\n            key={image}\n            style={{\n              transform: `translateX(${itemsOnPage}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${image}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__btn\"\n          onClick={getPrevImage}\n          disabled={itemsOnPage === 0}\n        >\n          <span className=\"Carousel__vector\">&lt;</span>\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__btn\"\n          data-cy=\"next\"\n          onClick={getNextImage}\n          disabled={itemsOnPage === -maxItemsOnPage && !infinite}\n        >\n          <span className=\"Carousel__vector\">&gt;</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const initialState: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const { images } = initialState;\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"App__title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n      <div className=\"block\">\n        <div className=\"block__element\">\n          <label htmlFor=\"Width\" className=\"block__label\">\n            Item Width:\n          </label>\n          <input\n            onChange={(event) => {\n              setItemWidth(+event.target.value);\n            }}\n            value={itemWidth}\n            type=\"number\"\n            id=\"Width\"\n            className=\"block__input\"\n          />\n        </div>\n        <div className=\"block__element\">\n          <label htmlFor=\"Size\" className=\"block__label\">\n            Frame Size:\n          </label>\n          <input\n            onChange={(event) => {\n              setFrameSize(+event.target.value);\n            }}\n            value={frameSize}\n            type=\"number\"\n            id=\"Size\"\n            className=\"block__input\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"block__element\">\n          <label htmlFor=\"Step\" className=\"block__label\">\n            Step:\n          </label>\n          <input\n            onChange={(event) => {\n              setStep(+event.target.value);\n            }}\n            value={step}\n            type=\"number\"\n            id=\"Step\"\n            className=\"block__input\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"block__element\">\n          <label htmlFor=\"Animation\" className=\"block__label\">\n            Animation Duration:\n          </label>\n          <input\n            onChange={(event) => {\n              setAnimationDuration(+event.target.value);\n            }}\n            value={animationDuration}\n            type=\"number\"\n            id=\"Animation\"\n            className=\"block__input\"\n          />\n        </div>\n        <div className=\"block__checkbox\">\n          <label htmlFor=\"infinite\">Infinite</label>\n          <input\n            checked={isChecked}\n            onChange={handleCheckboxChange}\n            type=\"checkbox\"\n            name=\"Infinite\"\n            id=\"1\"\n          />\n        </div>\n      </div>\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={isChecked}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}