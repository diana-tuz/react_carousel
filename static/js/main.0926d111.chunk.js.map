{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","startImage","setStartImage","endImage","setEndImage","useEffect","className","style","width","transition","slice","map","image","src","alt","type","onClick","disabled","length","App","setStep","setFrameSize","setItemWidth","setAnimationDuration","isChecked","setIsChecked","htmlFor","onChange","event","target","value","id","min","max","checked","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0926d111.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [startImage, setStartImage] = useState(0);\n  const [endImage, setEndImage] = useState(frameSize);\n\n  useEffect(() => {\n    setEndImage(startImage + frameSize);\n  }, [frameSize, startImage]);\n\n  const handlePrev = () => {\n    if (startImage > 0) {\n      setStartImage(startImage - step);\n      setEndImage(endImage - step);\n    }\n  };\n\n  const handleNext = () => {\n    if (endImage < images.length) {\n      setEndImage(endImage + step);\n      setStartImage(startImage + step);\n    }\n\n    if (infinite && endImage === images.length - 1) {\n      setStartImage(0);\n      setEndImage(frameSize);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ width: `${itemWidth * frameSize}px` }}>\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transition: `transform ${animationDuration}ms ease-in-out`,\n        }}\n      >\n        {images.slice(startImage, endImage).map((image: string) => (\n          <li\n            key={image}\n            className=\"Carousel__image\"\n          >\n            <img\n              src={image}\n              alt={image}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          className=\"Carousel__bnt\"\n          type=\"button\"\n          onClick={handlePrev}\n          disabled={startImage === 0}\n        >\n          Prev\n        </button>\n        <button\n          className=\"Carousel__bnt\"\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleNext}\n          disabled={endImage >= images.length && infinite === false}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const initialState: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const { images } = initialState;\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"App__title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n      <div className=\"block\">\n        <div className=\"block__element\">\n          <label htmlFor=\"Width\" className=\"block__label\">\n            Item Width:\n          </label>\n          <input\n            onChange={(event) => {\n              setItemWidth(+event.target.value);\n            }}\n            value={itemWidth}\n            type=\"number\"\n            id=\"Width\"\n            className=\"block__input\"\n          />\n        </div>\n        <div className=\"block__element\">\n          <label htmlFor=\"Size\" className=\"block__label\">\n            Frame Size:\n          </label>\n          <input\n            onChange={(event) => {\n              setFrameSize(+event.target.value);\n            }}\n            value={frameSize}\n            type=\"number\"\n            id=\"Size\"\n            className=\"block__input\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"block__element\">\n          <label htmlFor=\"Step\" className=\"block__label\">\n            Step:\n          </label>\n          <input\n            onChange={(event) => {\n              setStep(+event.target.value);\n            }}\n            value={step}\n            type=\"number\"\n            id=\"Step\"\n            className=\"block__input\"\n            min={1}\n            max={images.length}\n          />\n        </div>\n        <div className=\"block__element\">\n          <label htmlFor=\"Animation\" className=\"block__label\">\n            Animation Duration:\n          </label>\n          <input\n            onChange={(event) => {\n              setAnimationDuration(+event.target.value);\n            }}\n            value={animationDuration}\n            type=\"number\"\n            id=\"Animation\"\n            className=\"block__input\"\n          />\n        </div>\n        <div className=\"block__checkbox\">\n          <label htmlFor=\"infinite\">Infinite</label>\n          <input\n            checked={isChecked}\n            onChange={handleCheckboxChange}\n            type=\"checkbox\"\n            name=\"Infinite\"\n            id=\"1\"\n          />\n        </div>\n      </div>\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={isChecked}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}